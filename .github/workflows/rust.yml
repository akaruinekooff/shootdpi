name: Rust cross-build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - x86_64-pc-windows-gnu
          - i686-pc-windows-gnu
    continue-on-error: true

    steps:
      - uses: actions/checkout@v5

      - name: Setup multiarch and dependencies (Linux targets)
        if: startsWith(matrix.target, 'x86_64') || startsWith(matrix.target, 'i686') || startsWith(matrix.target, 'aarch64') || startsWith(matrix.target, 'armv7')
        run: |
          sudo dpkg --add-architecture i386
          sudo dpkg --add-architecture arm64
          sudo dpkg --add-architecture armhf
          sudo apt update
          sudo apt install -y \
            libglib2.0-dev \
            libglib2.0-dev:i386 \
            libglib2.0-dev:arm64 \
            libglib2.0-dev:armhf \
            pkg-config \
            build-essential \
            gcc-multilib \
            g++-multilib \
            crossbuild-essential-armhf \
            crossbuild-essential-arm64

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }} || true

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v5
        with:
          name: shootdpi-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/
